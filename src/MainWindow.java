
import persistence.GUIUpdater;
import persistence.DBQueries;
import entities.DogDiseases;
import entities.SymptomsList;
import java.awt.Desktop;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map.Entry;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.InputMap;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.KeyStroke;
import javax.swing.SwingWorker;
import javax.swing.Timer;
import javax.swing.text.DefaultEditorKit;
import org.apache.commons.collections.map.MultiValueMap;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import persistence.Diagnose;
import persistence.SaveRecords;
import persistence.ViewRecords;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Cris John Alonzaga
 */
public class MainWindow extends javax.swing.JFrame {
    private Timer time;
    private static Point point = new Point();
    
    private int checkbox_row;
    
    private DefaultListModel<String> model = new DefaultListModel<>();
    private HashMap<Integer , String> disease = new HashMap<>();
    private final ArrayList<SymptomsList> symptoms = new ArrayList<>();
    private final MultiValueMap multimap = new MultiValueMap();
    
    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        clock();
        setTheDate();
        settingsPanel.setVisible(false);
        manageDiseases.setLocationRelativeTo(null);
        
        setupSymptomsCheckBox();
        
        autoCompleteJCombo();
        
        jTabbedPane1.setEnabledAt(1, false);
        jTabbedPane1.setEnabledAt(2, false);
        
        diagnoseBTN.setEnabled(false);
        viewOnlineBTN.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        manageDiseases = new javax.swing.JDialog();
        addDiseasePanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        diseaseInfField = new javax.swing.JTextArea();
        saveDiseaseBTN = new javax.swing.JButton();
        symptomsTextField = new javax.swing.JComboBox<>();
        addBTN = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        symptomsList = new javax.swing.JList<>();
        resetFormBTN = new javax.swing.JButton();
        diseaseTextFileld = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        viewOnlineBTN = new javax.swing.JButton();
        mainPanelContainer = new javax.swing.JPanel();
        dashPanelContainer = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        dashboardPanel = new javax.swing.JPanel();
        sideWidgetPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        mainContentPanel = new javax.swing.JPanel();
        layeredPane = new javax.swing.JLayeredPane();
        introPanel = new javax.swing.JPanel();
        settingsPanel = new javax.swing.JPanel();
        manageDiseaseBTN = new javax.swing.JLabel();
        manageSymptomsBTN = new javax.swing.JLabel();
        viewRecordsBTN = new javax.swing.JLabel();
        diseasesSection = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel10 = new javax.swing.JPanel();
        editDiseaseBTN = new javax.swing.JButton();
        deleteDiseaseBTN = new javax.swing.JButton();
        addNewDiseaseBTN = new javax.swing.JButton();
        diagnosePane = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        allSymptomsTab = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        checkboxPanels = new javax.swing.JPanel();
        nextDiagnoseBTN = new javax.swing.JButton();
        filteredDiseaseTab = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        filteredSymptomsPanel = new javax.swing.JPanel();
        diagnosedTab = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        listPosibleDisease = new javax.swing.JList<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        diagnoseBTN = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        symptomsSection = new javax.swing.JPanel();
        clockLabel = new javax.swing.JLabel();
        timeTitle = new javax.swing.JLabel();
        timeLabel = new javax.swing.JLabel();

        manageDiseases.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        manageDiseases.setTitle("Add New Disease Form");
        manageDiseases.setLocation(new java.awt.Point(0, 0));
        manageDiseases.setPreferredSize(new java.awt.Dimension(525, 600));
        manageDiseases.setSize(new java.awt.Dimension(525, 600));

        addDiseasePanel.setBackground(new java.awt.Color(46, 48, 71));
        addDiseasePanel.setPreferredSize(new java.awt.Dimension(525, 550));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(59, 186, 156));
        jLabel5.setText("Disease Name :");

        jLabel7.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(59, 186, 156));
        jLabel7.setText("Disease Information :");

        diseaseInfField.setColumns(20);
        diseaseInfField.setLineWrap(true);
        diseaseInfField.setRows(5);
        diseaseInfField.setTabSize(1);
        jScrollPane2.setViewportView(diseaseInfField);

        saveDiseaseBTN.setText("Save");
        saveDiseaseBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveDiseaseBTNActionPerformed(evt);
            }
        });

        symptomsTextField.setEditable(true);
        symptomsTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                symptomsTextFieldActionPerformed(evt);
            }
        });

        addBTN.setText("Add");
        addBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBTNActionPerformed(evt);
            }
        });

        jScrollPane5.setViewportView(symptomsList);

        resetFormBTN.setText("Reset Form");

        diseaseTextFileld.setEditable(true);

        jLabel10.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(59, 186, 156));
        jLabel10.setText("Symptoms:");

        viewOnlineBTN.setText("View More Info Online");
        viewOnlineBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewOnlineBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addDiseasePanelLayout = new javax.swing.GroupLayout(addDiseasePanel);
        addDiseasePanel.setLayout(addDiseasePanelLayout);
        addDiseasePanelLayout.setHorizontalGroup(
            addDiseasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addDiseasePanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(addDiseasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addDiseasePanelLayout.createSequentialGroup()
                        .addComponent(viewOnlineBTN)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(resetFormBTN)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(saveDiseaseBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34))
                    .addGroup(addDiseasePanelLayout.createSequentialGroup()
                        .addGroup(addDiseasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addDiseasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel7)
                                .addComponent(jScrollPane2)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane5)
                                .addComponent(diseaseTextFileld, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(addDiseasePanelLayout.createSequentialGroup()
                                    .addComponent(symptomsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(addBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(36, Short.MAX_VALUE))))
        );
        addDiseasePanelLayout.setVerticalGroup(
            addDiseasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addDiseasePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(diseaseTextFileld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(addDiseasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(symptomsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addBTN))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(addDiseasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resetFormBTN)
                    .addComponent(saveDiseaseBTN)
                    .addComponent(viewOnlineBTN))
                .addContainerGap(90, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout manageDiseasesLayout = new javax.swing.GroupLayout(manageDiseases.getContentPane());
        manageDiseases.getContentPane().setLayout(manageDiseasesLayout);
        manageDiseasesLayout.setHorizontalGroup(
            manageDiseasesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addDiseasePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        manageDiseasesLayout.setVerticalGroup(
            manageDiseasesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addDiseasePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(46, 48, 71));
        setLocation(new java.awt.Point(0, 0));
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(800, 500));

        mainPanelContainer.setBackground(new java.awt.Color(46, 48, 71));

        dashPanelContainer.setBackground(new java.awt.Color(67, 69, 92));
        dashPanelContainer.setPreferredSize(new java.awt.Dimension(800, 40));
        dashPanelContainer.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                dashPanelContainerMouseDragged(evt);
            }
        });
        dashPanelContainer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                dashPanelContainerMousePressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(59, 186, 156));
        jLabel4.setText("Smart Health Prediction Desk App for Dogs ");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/closeicon.png"))); // NOI18N
        jLabel6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout dashPanelContainerLayout = new javax.swing.GroupLayout(dashPanelContainer);
        dashPanelContainer.setLayout(dashPanelContainerLayout);
        dashPanelContainerLayout.setHorizontalGroup(
            dashPanelContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dashPanelContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addContainerGap())
        );
        dashPanelContainerLayout.setVerticalGroup(
            dashPanelContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dashPanelContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        dashboardPanel.setBackground(new java.awt.Color(46, 48, 71));

        sideWidgetPanel.setBackground(new java.awt.Color(60, 63, 88));

        jLabel1.setBackground(new java.awt.Color(46, 48, 71));
        jLabel1.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(59, 186, 156));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/starticon.png"))); // NOI18N
        jLabel1.setText("Start Diagnose");
        jLabel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel1.setOpaque(true);
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(46, 48, 71));
        jLabel2.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(59, 186, 156));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/settingsicon.png"))); // NOI18N
        jLabel2.setText("  Settings");
        jLabel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.setOpaque(true);
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/dogicon.png"))); // NOI18N

        javax.swing.GroupLayout sideWidgetPanelLayout = new javax.swing.GroupLayout(sideWidgetPanel);
        sideWidgetPanel.setLayout(sideWidgetPanelLayout);
        sideWidgetPanelLayout.setHorizontalGroup(
            sideWidgetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sideWidgetPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sideWidgetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        sideWidgetPanelLayout.setVerticalGroup(
            sideWidgetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sideWidgetPanelLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addComponent(jLabel2)
                .addGap(116, 116, 116)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(71, Short.MAX_VALUE))
        );

        layeredPane.setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout introPanelLayout = new javax.swing.GroupLayout(introPanel);
        introPanel.setLayout(introPanelLayout);
        introPanelLayout.setHorizontalGroup(
            introPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 719, Short.MAX_VALUE)
        );
        introPanelLayout.setVerticalGroup(
            introPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 517, Short.MAX_VALUE)
        );

        layeredPane.add(introPanel, "card1");

        manageDiseaseBTN.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        manageDiseaseBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/manageD.png"))); // NOI18N
        manageDiseaseBTN.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        manageDiseaseBTN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                manageDiseaseBTNMouseClicked(evt);
            }
        });

        manageSymptomsBTN.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        manageSymptomsBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/manageS.png"))); // NOI18N
        manageSymptomsBTN.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        viewRecordsBTN.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        viewRecordsBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/history.png"))); // NOI18N
        viewRecordsBTN.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout settingsPanelLayout = new javax.swing.GroupLayout(settingsPanel);
        settingsPanel.setLayout(settingsPanelLayout);
        settingsPanelLayout.setHorizontalGroup(
            settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingsPanelLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(manageDiseaseBTN)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                .addComponent(manageSymptomsBTN)
                .addGap(80, 80, 80)
                .addComponent(viewRecordsBTN)
                .addGap(43, 43, 43))
        );
        settingsPanelLayout.setVerticalGroup(
            settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingsPanelLayout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(manageDiseaseBTN)
                    .addComponent(viewRecordsBTN)
                    .addComponent(manageSymptomsBTN))
                .addContainerGap(271, Short.MAX_VALUE))
        );

        layeredPane.add(settingsPanel, "card2");

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 692, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 353, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(jPanel10);

        editDiseaseBTN.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        editDiseaseBTN.setForeground(new java.awt.Color(59, 186, 156));
        editDiseaseBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/edit.png"))); // NOI18N
        editDiseaseBTN.setText("Edit");
        editDiseaseBTN.setFocusPainted(false);

        deleteDiseaseBTN.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        deleteDiseaseBTN.setForeground(new java.awt.Color(59, 186, 156));
        deleteDiseaseBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/trash.png"))); // NOI18N
        deleteDiseaseBTN.setText("Delete");
        deleteDiseaseBTN.setFocusPainted(false);

        addNewDiseaseBTN.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        addNewDiseaseBTN.setForeground(new java.awt.Color(59, 186, 156));
        addNewDiseaseBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/add.png"))); // NOI18N
        addNewDiseaseBTN.setText("Add Disease");
        addNewDiseaseBTN.setFocusPainted(false);
        addNewDiseaseBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewDiseaseBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout diseasesSectionLayout = new javax.swing.GroupLayout(diseasesSection);
        diseasesSection.setLayout(diseasesSectionLayout);
        diseasesSectionLayout.setHorizontalGroup(
            diseasesSectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, diseasesSectionLayout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(diseasesSectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(diseasesSectionLayout.createSequentialGroup()
                        .addComponent(addNewDiseaseBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(editDiseaseBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(deleteDiseaseBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, diseasesSectionLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 685, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        diseasesSectionLayout.setVerticalGroup(
            diseasesSectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(diseasesSectionLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(diseasesSectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editDiseaseBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteDiseaseBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addNewDiseaseBTN))
                .addContainerGap(73, Short.MAX_VALUE))
        );

        layeredPane.add(diseasesSection, "card3");

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        checkboxPanels.setLayout(new java.awt.GridLayout(getCheckBoxRow(), 2, 0, 1));
        jScrollPane3.setViewportView(checkboxPanels);

        nextDiagnoseBTN.setText("Next");
        nextDiagnoseBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextDiagnoseBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout allSymptomsTabLayout = new javax.swing.GroupLayout(allSymptomsTab);
        allSymptomsTab.setLayout(allSymptomsTabLayout);
        allSymptomsTabLayout.setHorizontalGroup(
            allSymptomsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, allSymptomsTabLayout.createSequentialGroup()
                .addContainerGap(466, Short.MAX_VALUE)
                .addComponent(nextDiagnoseBTN)
                .addContainerGap())
        );
        allSymptomsTabLayout.setVerticalGroup(
            allSymptomsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(allSymptomsTabLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nextDiagnoseBTN)
                .addGap(0, 9, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("All Symptoms", allSymptomsTab);

        filteredSymptomsPanel.setLayout(new java.awt.GridLayout(getCheckBoxRow(), 1, 0, 1));
        jScrollPane4.setViewportView(filteredSymptomsPanel);

        javax.swing.GroupLayout filteredDiseaseTabLayout = new javax.swing.GroupLayout(filteredDiseaseTab);
        filteredDiseaseTab.setLayout(filteredDiseaseTabLayout);
        filteredDiseaseTabLayout.setHorizontalGroup(
            filteredDiseaseTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 531, Short.MAX_VALUE)
        );
        filteredDiseaseTabLayout.setVerticalGroup(
            filteredDiseaseTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 427, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Filtered Symptoms", filteredDiseaseTab);

        listPosibleDisease.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listPosibleDiseaseMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(listPosibleDisease);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel8.setText("The following disease list are the generated possible illness your pet might have.");

        jLabel9.setText("Double click to view information.");

        jButton4.setText("Save Record");

        javax.swing.GroupLayout diagnosedTabLayout = new javax.swing.GroupLayout(diagnosedTab);
        diagnosedTab.setLayout(diagnosedTabLayout);
        diagnosedTabLayout.setHorizontalGroup(
            diagnosedTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(diagnosedTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(diagnosedTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, diagnosedTabLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addContainerGap())
        );
        diagnosedTabLayout.setVerticalGroup(
            diagnosedTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(diagnosedTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addGap(105, 105, 105))
        );

        jTabbedPane1.addTab("Final Diagnoses", diagnosedTab);

        diagnoseBTN.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        diagnoseBTN.setText("Diagnose");
        diagnoseBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diagnoseBTNActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton2.setText("Reset");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout diagnosePaneLayout = new javax.swing.GroupLayout(diagnosePane);
        diagnosePane.setLayout(diagnosePaneLayout);
        diagnosePaneLayout.setHorizontalGroup(
            diagnosePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(diagnosePaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(diagnosePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(diagnoseBTN, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        diagnosePaneLayout.setVerticalGroup(
            diagnosePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(diagnosePaneLayout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 62, Short.MAX_VALUE))
            .addGroup(diagnosePaneLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(diagnoseBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layeredPane.add(diagnosePane, "card4");
        diagnosePane.getAccessibleContext().setAccessibleDescription("");

        javax.swing.GroupLayout symptomsSectionLayout = new javax.swing.GroupLayout(symptomsSection);
        symptomsSection.setLayout(symptomsSectionLayout);
        symptomsSectionLayout.setHorizontalGroup(
            symptomsSectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 719, Short.MAX_VALUE)
        );
        symptomsSectionLayout.setVerticalGroup(
            symptomsSectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 517, Short.MAX_VALUE)
        );

        layeredPane.add(symptomsSection, "card6");

        mainContentPanel.add(layeredPane);

        clockLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        clockLabel.setForeground(new java.awt.Color(59, 186, 156));
        clockLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        timeTitle.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        timeTitle.setForeground(new java.awt.Color(59, 186, 156));
        timeTitle.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        timeTitle.setText("System Date and Time:");

        timeLabel.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        timeLabel.setForeground(new java.awt.Color(59, 186, 156));
        timeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout dashboardPanelLayout = new javax.swing.GroupLayout(dashboardPanel);
        dashboardPanel.setLayout(dashboardPanelLayout);
        dashboardPanelLayout.setHorizontalGroup(
            dashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dashboardPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dashboardPanelLayout.createSequentialGroup()
                        .addComponent(sideWidgetPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mainContentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dashboardPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(dashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(timeLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clockLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(timeTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        dashboardPanelLayout.setVerticalGroup(
            dashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dashboardPanelLayout.createSequentialGroup()
                .addComponent(timeTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(timeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clockLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(dashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sideWidgetPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mainContentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout mainPanelContainerLayout = new javax.swing.GroupLayout(mainPanelContainer);
        mainPanelContainer.setLayout(mainPanelContainerLayout);
        mainPanelContainerLayout.setHorizontalGroup(
            mainPanelContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dashPanelContainer, javax.swing.GroupLayout.DEFAULT_SIZE, 926, Short.MAX_VALUE)
            .addComponent(dashboardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        mainPanelContainerLayout.setVerticalGroup(
            mainPanelContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelContainerLayout.createSequentialGroup()
                .addComponent(dashPanelContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dashboardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(mainPanelContainer, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLabel6MouseClicked
    
    //Make header draggable
    private void dashPanelContainerMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dashPanelContainerMouseDragged
       Point p = this.getLocation();
       this.setLocation(p.x + evt.getX() - point.x, p.y + evt.getY() - point.y);
    }//GEN-LAST:event_dashPanelContainerMouseDragged

    private void dashPanelContainerMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dashPanelContainerMousePressed
       point.x = evt.getX();
       point.y = evt.getY();
    }//GEN-LAST:event_dashPanelContainerMousePressed
    //end
    
    @SuppressWarnings("empty-statement")
    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        checkboxPanels.removeAll();
        switchPanels(diagnosePane);
        setupSymptomsCheckBox();
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
       settingsPanel.setVisible(true);
       switchPanels(settingsPanel);
    }//GEN-LAST:event_jLabel2MouseClicked

    private void manageDiseaseBTNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_manageDiseaseBTNMouseClicked
        
        addBTN.setEnabled(true);
        saveDiseaseBTN.setEnabled(true);
        resetFormBTN.setEnabled(true);
        //guiDataUpdateThread();
        clearForm();
        autoCompleteJCombo();
        diseasesSection.setVisible(true);
        switchPanels(diseasesSection);
    }//GEN-LAST:event_manageDiseaseBTNMouseClicked

    private void addNewDiseaseBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewDiseaseBTNActionPerformed
        manageDiseases.setVisible(true);
    }//GEN-LAST:event_addNewDiseaseBTNActionPerformed

    private void addBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBTNActionPerformed
        DBQueries dbq = new DBQueries();
        dbq.setSymptoms();
        
        String symptom = symptomsTextField.getSelectedItem().toString();
        
        HashMap<Integer,String> map = new HashMap<>(dbq.getMapping());
        
        if(!"".equals(symptom) && !model.contains(symptom)){
            model.addElement(symptom);
        }
        else{
            setPopUpMessage("Cannot add the same symptoms!");
        }
        
        symptomsList.setModel(model);
    }//GEN-LAST:event_addBTNActionPerformed

    private void saveDiseaseBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveDiseaseBTNActionPerformed

        boolean bool = getIdSelectedDisease(diseaseTextFileld.getSelectedItem().toString());
        //System.out.println(bool);
        if( validateForm() &&  bool != true){
            int size = symptomsList.getModel().getSize();
            String diseaseName = diseaseTextFileld.getSelectedItem().toString();
            String diseaseInfo = diseaseInfField.getText();
            for(int i = 0 ; i < size ; i++){
                Object list =symptomsList.getModel().getElementAt(i);
                //symptomsId.put(getIdSelectedSymptoms(list) , list.toString());
                
                multimap.put(getIdSelectedSymptoms(list), list.toString());
            }
            
            DogDiseases dd = new DogDiseases( diseaseName, diseaseInfo );
            
            SaveRecords.setDogDiseasesData(dd);
            SaveRecords sr = new SaveRecords();
            sr.setIdForSelectedSymptoms(multimap);
            
            try {
                setPopUpMessage(sr.doInBackground().toString());
            } catch (Exception ex) {
                Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            clearForm();
            guiDataUpdateThread();
        }
        else if(bool){
            setPopUpMessage("Disease already exist...");
        }
        else{
            setPopUpMessage("Please complete form..");
        }
        
    }//GEN-LAST:event_saveDiseaseBTNActionPerformed
    
    private void clearForm(){
        
        diseaseTextFileld.setSelectedItem("");
        symptomsTextField.setSelectedItem("");
        DefaultListModel dlm = (DefaultListModel) symptomsList.getModel();
        dlm.removeAllElements();
        symptomsList.setModel(dlm);
        diseaseInfField.setText("");
        
    }
    
    private void guiDataUpdateThread(){
        
        SwingWorker thread = new SwingWorker(){
            
            @Override
            protected Object doInBackground() throws Exception {
                autoCompleteJCombo();
                return "updated";
            }
        };
        
        thread.execute();
    }
    
    private boolean validateForm(){
        boolean bool = symptomsList.getModel().getSize() != 0 && diseaseTextFileld.getItemCount() != 0 && !"".equals(diseaseInfField.getText());
        return bool;
    }
       
    private void nextDiagnoseBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextDiagnoseBTNActionPerformed
        Diagnose d = new Diagnose();
        d.setSymptomsId(DBQueries.getSymtomsId());
        d.detectSymptoms(false);
        
        GUIUpdater ui = new GUIUpdater();
        ui.setFilteredCheckBox(d.getFilteredSymptoms());
        
        try {
           setupFilteredSymptomsCheckBox(ui.doInBackground());
           diagnoseBTN.setEnabled(true);
        } catch (Exception ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        jTabbedPane1.setEnabledAt(1, true);
        jTabbedPane1.setSelectedIndex(1);
    }//GEN-LAST:event_nextDiagnoseBTNActionPerformed

    private void diagnoseBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diagnoseBTNActionPerformed
        //System.out.println(DBQueries.getDiseaseId());
        if(!DBQueries.getSymtomsId().isEmpty()){
            Diagnose d = new Diagnose();
            d.setSymptomsId(DBQueries.getSymtomsId());
            
            d.detectSymptoms(true);
            setDiseaseHashMap(d.getDiseaseHashMap());
            showListFinalDiagnoses(d.getFinalDiagnoses());
            
            System.out.println(d.getDiseaseHashMap());
            
            jTabbedPane1.setEnabledAt(2, true);
            jTabbedPane1.setSelectedIndex(2);
           
        }
        else{
            setPopUpMessage("Please select symptoms..");
        }
        
        //System.out.println(DBQueries.getSymtomsId());
    }//GEN-LAST:event_diagnoseBTNActionPerformed
    
    //temp --?
    private void setDiseaseHashMap(HashMap<Integer , String> map){
        this.disease = map;
    }
    private HashMap<Integer , String> getDiseaseHashMap(){
        return this.disease;
    }
    
    private void listPosibleDiseaseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listPosibleDiseaseMouseClicked
        ViewRecords vr = new ViewRecords();
        if( evt.getClickCount() == 2 ){
            ViewRecords.setDiseaseMap(getDiseaseHashMap());
            vr.searchRecords(listPosibleDisease.getSelectedValue());
            
            DefaultComboBoxModel model = new DefaultComboBoxModel();
            for(int i = 0; i < vr.getDiseaseInfo().size() ; i++){
                model.addElement(vr.getDiseaseInfo().get(0));
                diseaseInfField.setText(vr.getDiseaseInfo().get(1));
            }
            
            DefaultListModel model2 = new DefaultListModel();
            for(int i = 0 ; i < vr.getSymptomsViewRecord().size() ; i++){
                model2.addElement(vr.getSymptomsViewRecord().get(i));
            }
            
            addBTN.setEnabled(false);
            saveDiseaseBTN.setEnabled(false);
            resetFormBTN.setEnabled(false);
            viewOnlineBTN.setEnabled(true);
            
            symptomsList.setModel(model2);
            
            getAutocompleteComboBox(diseaseTextFileld, model);
            
            manageDiseases.setVisible(true);
        }
    }//GEN-LAST:event_listPosibleDiseaseMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        jTabbedPane1.setSelectedIndex(0);
        jTabbedPane1.setEnabledAt(1, false);
        jTabbedPane1.setEnabledAt(2, false);
        diagnoseBTN.setEnabled(false);
        DBQueries.getSymtomsId().clear();
        filteredSymptomsPanel.removeAll();
        setupSymptomsCheckBox();
        
        ArrayList<String> str = new ArrayList<>();
        showListFinalDiagnoses(str);
        
        //System.out.println( DBQueries.getSymtomsId() );
    }//GEN-LAST:event_jButton2ActionPerformed

    private void symptomsTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_symptomsTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_symptomsTextFieldActionPerformed

    private void viewOnlineBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewOnlineBTNActionPerformed
        String str = diseaseTextFileld.getSelectedItem().toString();
        String searchQuery = str.replace(" ", "+");
       
        try {
            Desktop.getDesktop().browse(new URI("https://www.google.com/search?q="+searchQuery));
        } catch (IOException | URISyntaxException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_viewOnlineBTNActionPerformed
    
    //display final diagnoses results on jList
    public void showListFinalDiagnoses(ArrayList<String> hash){
        
        int num = hash.size();
        DefaultListModel model = new DefaultListModel();
        for(int i = 0 ; i < num ; i++){
            model.addElement(hash.get(i));
        }
        
        listPosibleDisease.setModel(model);
        
    }
    
    private void setPopUpMessage(String msg){
        JOptionPane.showMessageDialog(null, msg);
    }
    
    //Switching Panel
    public void switchPanels(JPanel panel){
        layeredPane.removeAll();
        layeredPane.add(panel);
        layeredPane.repaint();
        layeredPane.revalidate();
    }
    
    //System Clock
    public final void clock(){
        SystemClock clk = new SystemClock();
        int delay = 1000;
        
        ActionListener taskPerform = new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                clk.setTimeNow();
                clockLabel.setText(clk.getTheTime());
                //System.out.println(Thread.currentThread().getName());
            }
        };
        time = new Timer(delay, taskPerform);
        time.setRepeats(true);
        time.start();
    }
    
    public final void setTheDate(){
        LocalDate date = LocalDate.now();
        int year = date.getYear();
        int day = date.getDayOfMonth();
        String month = date.getMonth().toString().toLowerCase();
        String m = month.substring(0,1).toUpperCase() + month.substring(1);
        String thedate = ""+m+", "+day+" "+year;
        timeLabel.setText(thedate);
    }
    //end systemclock
    
    //make jcombobox autocomplete
    public final void autoCompleteJCombo(){
        DBQueries dbq = new DBQueries();
        dbq.setSymptoms();
        dbq.setDiseases();
        
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        for(int i = 0; i < dbq.getSymptoms().size() ; i++){
            model.addElement(dbq.getSymptoms().get(i));
        }
        
        DefaultComboBoxModel model2 = new DefaultComboBoxModel();
        for(int i = 0; i < dbq.getDiseases().size() ; i++){
            model2.addElement(dbq.getDiseases().get(i));
        }
        
        getAutocompleteComboBox(diseaseTextFileld, model2);
        getAutocompleteComboBox(symptomsTextField, model);
    }
    
    private void getAutocompleteComboBox(JComboBox jcombo , DefaultComboBoxModel models){
        InputMap map = ((JComponent) jcombo.getEditor().getEditorComponent()).getInputMap();
        map.put(KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_BACK_SPACE, 0), DefaultEditorKit.deletePrevCharAction);
        
        jcombo.setModel((ComboBoxModel<String>) models);
        AutoCompleteDecorator.decorate(jcombo);
    }
    //ends autocomplete
    
    public void detectCheckSymptoms(JCheckBox checkbox){
        
        checkbox.addItemListener(new ItemListener(){
            @Override
            public void itemStateChanged(ItemEvent e) {   
                if(e.getStateChange() == 1){
                    DBQueries.setSymtomsId(getIdSelectedSymptoms(checkbox.getText()));
//                    System.out.println(DBQueries.getDiseaseId());
                }
                else{
                    DBQueries.setSymtomsId(getIdSelectedSymptoms(checkbox.getText()));
                    //System.out.println(DBQueries.getDiseaseId());
                }
            }
        });
        
    }
    
    public Integer getIdSelectedSymptoms(String name){
        DBQueries dbq = new DBQueries();
        dbq.setSymptoms();
        int ids = 0;
        
        for( Entry<Integer, String> entry : dbq.getMapping().entrySet()){
            if(entry.getValue().equals(name)){
               ids = entry.getKey();
            }
        }
        
        return ids;
    }
    
    public Integer getIdSelectedSymptoms(Object name){
        DBQueries dbq = new DBQueries();
        dbq.setSymptoms();
        int ids = 0;
        
        for( Entry<Integer, String> entry : dbq.getMapping().entrySet() ){
            if(entry.getValue().equals(name)){
               ids = entry.getKey();
            }
        }
        
        return ids;
    }
    
    public boolean getIdSelectedDisease(String name){
        DBQueries dbq = new DBQueries();
        dbq.setDiseases();
        
        for( Entry<Integer, String> entry : dbq.getMapping().entrySet()){
            if(entry.getValue().equals(name)){
               //System.out.println("hey true");
               return true;
            }
            break;
        }
        
        return false;
    }
    
    //add all symptoms in panel
    public void setupFilteredSymptomsCheckBox(JCheckBox[] chk){
        filteredSymptomsPanel.removeAll();
        setCheckBoxRow(chk.length);
        for(JCheckBox c : chk){
            detectCheckSymptoms(c);
            filteredSymptomsPanel.add(c);
            filteredSymptomsPanel.revalidate();
            filteredSymptomsPanel.repaint();
        }
    }
    
    public final void setupSymptomsCheckBox(){
        GUIUpdater gui = new GUIUpdater();
        try {
            checkboxPanels.removeAll();
            setCheckBoxRow( gui.doInBackground().length );
            for(JCheckBox c : gui.doInBackground()){
                detectCheckSymptoms(c);
                checkboxPanels.add(c);
                checkboxPanels.revalidate();
                checkboxPanels.repaint();
            }
            
        } catch (Exception ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void setCheckBoxRow(int rows){
        this.checkbox_row = rows;
    }
    private int getCheckBoxRow(){
        return this.checkbox_row;
    }
    //
    
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBTN;
    private javax.swing.JPanel addDiseasePanel;
    private javax.swing.JButton addNewDiseaseBTN;
    private javax.swing.JPanel allSymptomsTab;
    private javax.swing.JPanel checkboxPanels;
    private javax.swing.JLabel clockLabel;
    private javax.swing.JPanel dashPanelContainer;
    private javax.swing.JPanel dashboardPanel;
    private javax.swing.JButton deleteDiseaseBTN;
    private javax.swing.JButton diagnoseBTN;
    private javax.swing.JPanel diagnosePane;
    private javax.swing.JPanel diagnosedTab;
    private javax.swing.JTextArea diseaseInfField;
    private javax.swing.JComboBox<String> diseaseTextFileld;
    private javax.swing.JPanel diseasesSection;
    private javax.swing.JButton editDiseaseBTN;
    private javax.swing.JPanel filteredDiseaseTab;
    private javax.swing.JPanel filteredSymptomsPanel;
    private javax.swing.JPanel introPanel;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLayeredPane layeredPane;
    private javax.swing.JList<String> listPosibleDisease;
    private javax.swing.JPanel mainContentPanel;
    private javax.swing.JPanel mainPanelContainer;
    private javax.swing.JLabel manageDiseaseBTN;
    private javax.swing.JDialog manageDiseases;
    private javax.swing.JLabel manageSymptomsBTN;
    private javax.swing.JButton nextDiagnoseBTN;
    private javax.swing.JButton resetFormBTN;
    private javax.swing.JButton saveDiseaseBTN;
    private javax.swing.JPanel settingsPanel;
    private javax.swing.JPanel sideWidgetPanel;
    private javax.swing.JList<String> symptomsList;
    private javax.swing.JPanel symptomsSection;
    private javax.swing.JComboBox<String> symptomsTextField;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JLabel timeTitle;
    private javax.swing.JButton viewOnlineBTN;
    private javax.swing.JLabel viewRecordsBTN;
    // End of variables declaration//GEN-END:variables
}
